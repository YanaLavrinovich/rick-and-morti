{"version":3,"sources":["reportWebVitals.ts","shared/recoil/atoms.ts","shared/recoil/selectors.ts","components/molecules/EpisodeCard/index.tsx","components/molecules/EpisodeList/index.tsx","components/molecules/Avatar/index.tsx","components/molecules/AvatarList/index.tsx","components/organisms/CharacterList/index.tsx","components/pages/Home/index.tsx","shared/routers/index.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","atom","key","default","currentCharacterListPageState","characterListQuery","selectorFamily","get","page","async","queryParams","URLSearchParams","String","fetch","concat","json","currentCharacterListState","selector","results","parseEpisodeNumber","episode","_matched$at","matched","match","at","split","EpisodeCard","React","createElement","className","Link","href","target","EpisodeList","items","Fragment","map","item","index","useStyles","makeStyles","card","minWidth","preview","display","gridTemplateColumns","Avatar","styles","Card","CardHeader","image","src","alt","name","header","Body1","description","Caption1","gender","CardPreview","AvatarList","id","CharacterList","characterList","useRecoilValue","HomePage","Suspense","fallback","router","createBrowserRouter","path","element","App","RecoilRoot","RouterProvider","ReactDOM","createRoot","document","getElementById","render","FluentProvider","theme","teamsLightTheme"],"mappings":"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","file":"static/js/main.4361c36f.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { RecoilState, atom } from 'recoil';\nimport { ICharacter } from '../types';\n\nexport const characterListState: RecoilState<ICharacter[]> = atom<ICharacter[]>(\n  {\n    key: 'CharacterList',\n    default: [],\n  }\n);\n\nexport const currentCharacterListPageState: RecoilState<number> = atom({\n  key: 'currentCharacterListPage',\n  default: 1,\n});\n","import { selector, selectorFamily } from 'recoil';\nimport { currentCharacterListPageState } from './atoms';\n\nexport const characterListQuery = selectorFamily({\n  key: 'characterListQuery',\n  get: (page: number) => async () => {\n    const queryParams = new URLSearchParams({\n      page: String(page),\n    });\n    const response = await fetch(\n      `https://rickandmortyapi.com/api/character?${queryParams}`\n    );\n\n    return response.json();\n  },\n});\n\nexport const currentCharacterListState = selector({\n  key: 'CurrentCharacterList',\n  get: ({ get }) =>\n    get(characterListQuery(get(currentCharacterListPageState))).results,\n});\n","import React from 'react';\nimport './styles.css';\nimport { Link } from '@fluentui/react-components';\n\ninterface IEpisodeCardProps {\n  episode: string;\n}\n\nconst EpisodeCard = ({ episode }: IEpisodeCardProps) => {\n  return (\n    <ul className=\"episode-card\">\n      <Link href={episode} target=\"_blank\">\n        {parseEpisodeNumber(episode)}\n      </Link>\n    </ul>\n  );\n};\n\nconst parseEpisodeNumber = (episode: string) => {\n  const matched = episode.match(/episode\\/\\d+/g);\n  if (matched === null) {\n    return null;\n  }\n\n  return matched.at(0)?.split('/').at(1);\n};\n\nexport default EpisodeCard;\n","import React from 'react';\nimport './styles.css';\nimport EpisodeCard from '../EpisodeCard';\nimport './styles.css';\n\ninterface IEpisodeListProps {\n  items: string[];\n}\n\nconst EpisodeList = ({ items }: IEpisodeListProps) => {\n  return (\n    <React.Fragment>\n      {items.map((item, index) => (\n        <EpisodeCard key={index} episode={item} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default EpisodeList;\n","import {\n  Body1,\n  Caption1,\n  Card,\n  CardHeader,\n  CardPreview,\n  makeStyles,\n} from '@fluentui/react-components';\nimport React from 'react';\nimport './styles.css';\nimport EpisodeList from '../EpisodeList';\nimport { ICharacter } from '../../../shared/types';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: '30%',\n  },\n  preview: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr 1fr',\n  },\n});\n\ninterface IAvatarProps {\n  item: ICharacter;\n}\n\nconst Avatar = ({ item }: IAvatarProps) => {\n  const styles = useStyles();\n  return (\n    <Card className={styles.card}>\n      <CardHeader\n        image={\n          <img className={'avatar-img'} src={item.image} alt={item.name} />\n        }\n        header={\n          <Body1>\n            <b>{item.name}</b>\n          </Body1>\n        }\n        description={<Caption1>{item.gender}</Caption1>}\n      />\n      <CardPreview className={styles.preview}>\n        <EpisodeList items={item.episode} />\n      </CardPreview>\n    </Card>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport Avatar from '../Avatar';\nimport './styles.css';\nimport { ICharacter } from '../../../shared/types';\n\ninterface IAvatarListProps {\n  items: ICharacter[];\n}\n\nconst AvatarList = ({ items }: IAvatarListProps) => {\n  return (\n    <div className=\"avatar-list\">\n      {!!items && items.map((item) => <Avatar key={item.id} item={item} />)}\n    </div>\n  );\n};\n\nexport default AvatarList;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { currentCharacterListState } from '../../../shared/recoil/selectors';\nimport AvatarList from '../../molecules/AvatarList';\n\nconst CharacterList = () => {\n  const characterList = useRecoilValue(currentCharacterListState);\n\n  return <AvatarList items={characterList} />;\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport CharacterList from '../../organisms/CharacterList';\nimport './styles.css';\n\nconst HomePage = () => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <div className={'home-container'}>\n        <CharacterList />\n      </div>\n    </React.Suspense>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { createBrowserRouter } from 'react-router-dom';\nimport HomePage from '../../components/pages/Home';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <HomePage />,\n  },\n]);\n\nexport default router;\n","import React from 'react';\nimport './App.css';\nimport { RouterProvider } from 'react-router-dom';\nimport router from './shared/routers';\nimport { RecoilRoot } from 'recoil';\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <RouterProvider router={router} />\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { FluentProvider, teamsLightTheme } from '@fluentui/react-components';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <FluentProvider theme={teamsLightTheme}>\n    <App />\n  </FluentProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}